{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/covid.png"],"names":["module","exports","Cards","data","confirmed","lastUpdate","recovered","deaths","className","style","container","Grid","spacing","justify","item","xs","md","cx","card","infected","component","Card","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","Chart","country","useState","dailyData","setDailyData","console","log","useEffect","a","axios","get","response","fetchDailyData","lineChart","labels","map","val","reportDate","datasets","total","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleControlChange","countries","setCountries","FormControl","formControl","NativeSelect","onChange","e","target","index","name","key","App","setData","setCountry","message","fetchData","src","covidImage","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41999395.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3si60\",\"card\":\"Cards_card__20cG-\",\"infected\":\"Cards_infected__1rRcv\",\"recovered\":\"Cards_recovered__1z5CO\",\"deaths\":\"Cards_deaths__tFc_9\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport style from './Cards.module.css'\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\nconst Cards = ({data : {confirmed, lastUpdate, recovered, deaths}}) => {\r\n    \r\n    return !confirmed && !lastUpdate && !recovered && !deaths ? null : (\r\n        <div className={style.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} md={3} className={cx(style.card, style.infected)}  component={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0}  end={confirmed.value} duration={2.5} separator=\",\" />\r\n                           \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} className={cx(style.card, style.recovered)}  component={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0}  end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">Number of recovered from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} className={cx(style.card, style.deaths)}  component={Card}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\r\n                        <Typography varaint=\"h5\">\r\n                            <CountUp start={0}  end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">Number of death caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport style from './Chart.module.css'\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([])\r\n    console.log(country)\r\n    console.log(confirmed, recovered, deaths)\r\n    useEffect(() => {\r\n        async function fetchDailyData(){\r\n            const url = 'https://covid19.mathdro.id/api/daily'\r\n            const response = await axios.get(url)\r\n            setDailyData(response.data)\r\n        }\r\n        fetchDailyData()\r\n    }, [])\r\n    // console.log(dailyData)\r\n    const lineChart = (\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(val => val.reportDate),\r\n                datasets: [{\r\n                    data: dailyData.map(val => val.confirmed.total),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(val => val.deaths.total),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }],\r\n            }}\r\n        \r\n        />\r\n    )\r\n    const barChart = (\r\n        confirmed && recovered && deaths ? (\r\n        <Bar \r\n            data={{\r\n                labels: ['Infectsed', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                    ],\r\n                    data:  [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}`}\r\n            }}\r\n        \r\n        \r\n        \r\n        \r\n        />)  : null\r\n    ) \r\n    return (\r\n        <div className={style.container}>\r\n           {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport style from './CountryPicker.module.css'\r\nimport axios from 'axios'\r\nconst CountryPicker = ({ handleControlChange }) => {\r\n    const [countries, setCountries] = useState([])\r\n    useEffect(() => {\r\n        async function countries(){\r\n            const url = 'https://covid19.mathdro.id/api/countries'\r\n            const response = await axios.get(url)\r\n            const { data } = response\r\n            setCountries(data.countries)\r\n        }\r\n       countries()\r\n    }, [])\r\n    // console.log(countries)\r\n    return (\r\n        <FormControl className={style.formControl}>\r\n            <NativeSelect onChange={e => handleControlChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {\r\n                    countries ? countries.map((val, index) => {\r\n                        return (\r\n                            <option value={val.name} key={index} >{val.name}</option>\r\n                        )\r\n                    }) : null\r\n                }\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, {useEffect, useState} from 'react'\r\nimport Cards from './components/Cards/Cards'\r\nimport Chart from './components/Chart/Chart'\r\nimport CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport style from './App.module.css'\r\nimport axios from 'axios'\r\nimport covidImage from './img/covid.png'\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({})\r\n    const [country, setCountry] = useState('')\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const url = 'https://covid19.mathdro.id/api';\r\n                const response = await axios.get(url)\r\n                // const {confirmed, recovered, deaths, lastUpdate} = response\r\n                const data = {\r\n                    confirmed: response.data.confirmed,\r\n                    recovered: response.data.recovered,\r\n                    deaths: response.data.deaths,\r\n                    lastUpdate: response.data.lastUpdate\r\n                }\r\n                setData(data)\r\n                // console.log(response)\r\n            } catch (error) {\r\n               console.log(error.message) \r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    const handleControlChange =  async (country) => {\r\n        if(country === 'global'){\r\n            const response = await axios.get(`https://covid19.mathdro.id/api/`)\r\n            const data = {\r\n            confirmed: response.data.confirmed,\r\n            recovered: response.data.recovered,\r\n            deaths: response.data.deaths,\r\n            lastUpdate: response.data.lastUpdate\r\n            }\r\n            setData(data)\r\n            setCountry('')\r\n            \r\n        }\r\n        else{\r\n            const response = await axios.get(`https://covid19.mathdro.id/api/countries/${country}`)\r\n            const data = {\r\n            confirmed: response.data.confirmed,\r\n            recovered: response.data.recovered,\r\n            deaths: response.data.deaths,\r\n            lastUpdate: response.data.lastUpdate\r\n            }\r\n            setData(data)\r\n            setCountry(country)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <img src={covidImage}  alt=\"covidImage\" className={style.covidImage}/>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleControlChange={handleControlChange} />\r\n            <Chart data={data} country={country} />\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jxJq\",\"covidImage\":\"App_covidImage__2-NRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__16OWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2YMF5\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}